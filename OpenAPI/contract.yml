openapi: 3.0.1
info:
  title: Book Store Order API
  version: 1.0.0
  description: API for managing orders in the Book Store system

servers:
  - url: 'http://localhost:8080'
    description: Local Development

tags:
  - name: Orders
    description: Operations related to customer orders

paths:
  /orders:
    get:
      tags:
        - Orders
      summary: Get all orders
      description: Retrieve a paginated list of all orders
      operationId: findAllOrders
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            default: 0
          description: Page number (0-based)
        - name: size
          in: query
          schema:
            type: integer
            default: 10
          description: Number of records per page
      responses:
        '200':
          description: Successfully retrieved orders
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrdersResponse'

  /orders/{id}:
    get:
      tags:
        - Orders
      summary: Get order by ID
      operationId: findOrderById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successfully retrieved the order
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'

    delete:
      tags:
        - Orders
      summary: Delete an order by ID
      operationId: deleteOrder
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Order deleted successfully

  /orders/place:
    post:
      tags:
        - Orders
      summary: Place a new order
      operationId: placeOrder
      parameters:
        - name: customerId
          in: query
          required: true
          schema:
            type: string
            format: uuid
        - name: bookId
          in: query
          required: true
          schema:
            type: string
            format: uuid
        - name: quantity
          in: query
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Order placed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'

components:
  schemas:
    OrdersResponse:
      type: object
      properties:
        orders:
          type: array
          items:
            $ref: '#/components/schemas/Order'

    Order:
      type: object
      properties:
        id:
          type: string
          format: uuid
        orderDate:
          type: string
          format: date-time
        customerId:
          type: string
          format: uuid
        items:
          type: array
          items:
            $ref: '#/components/schemas/OrderItem'
        totalPrice:
          type: number
          format: float

    OrderItem:
      type: object
      properties:
        bookId:
          type: string
          format: uuid
        quantity:
          type: integer
        price:
          type: number
          format: float
