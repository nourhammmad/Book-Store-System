openapi: 3.0.3
info:
  title: Bookstore User API
  version: 1.0.0
  description: API for managing customers and admins
servers:
  - url: 'http://localhost:8080/'
    description: Development Environment

paths:
  /customers:
    get:
      summary: Get all customers (paginated)
      tags: ["Customers"]
      parameters:
        - name: page
          in: query
          required: false
          schema:
            type: integer
        - name: size
          in: query
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: List of customers
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomerApiDto'

    post:
      summary: Create a new customer
      tags: ["Customers"]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
      responses:
        '201':
          description: Customer created

  /customers/{id}:
    get:
      summary: Get customer by ID
      tags: ["Customers"]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Customer details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerApiDto'

    delete:
      summary: Delete customer by ID
      tags: ["Customers"]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Customer deleted

  /admins:
    get:
      summary: Get all admins (paginated)
      tags: ["Admins"]
      parameters:
        - name: page
          in: query
          required: false
          schema:
            type: integer
        - name: size
          in: query
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: List of admins
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Admin'

    post:
      summary: Create a new admin
      tags: ["Admins"]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Admin'
      responses:
        '201':
          description: Admin created

  /admins/{id}:
    get:
      summary: Get admin by ID
      tags: ["Admins"]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Admin details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Admin'

    delete:
      summary: Delete admin by ID
      tags: ["Admins"]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Admin deleted

  /admins/update-book-field:
    post:
      summary: Log a book field update
      tags: ["Admins"]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookFieldUpdate'
      responses:
        '200':
          description: Book field update logged

components:
  schemas:
    Customer:
      type: object
      properties:
        id:
          type: integer
        email:
          type: string
        name:
          type: string
        address:
          type: string
        balance:
          type: number
          format: float

    CustomerApiDto:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        email:
          type: string
        address:
          type: string
        balance:
          type: number
          format: float

    Admin:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        email:
          type: string


    BookFieldUpdate:
      type: object
      properties:
        entityId:
          type: integer
        field:
          type: string
        oldValue:
          type: string
        newValue:
          type: string
        changedBy:
          type: integer
